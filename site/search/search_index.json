{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sejam bem-vindos \u00b6 Introdu\u00e7\u00e3o \u00b6 Manterei nesse reposit\u00f3rio uma s\u00e9rie de documenta\u00e7\u00f5es e dicas sobre sistemas ou projetos que estudo e/ou pesquiso. Com isto, tenho os seguintes objetivos em mente: Manter documentado o que fiz, fa\u00e7o e farei para facilitar minha vida; Aprender a usar melhor o Mkdocs; Ajudar outras pessoas que estejam pesquisando coisas parecidas. \u00c9 bom notar que muitas das coisas documentadas aqui podem n\u00e3o estar otimizadas ou mesmo terem sido feitas da maneira correta, pois em sua maioria s\u00e3o meus testes e projetos pessoais. Usem por sua conta e risco! Como fiz esta p\u00e1gina? \u00b6 Esta p\u00e1gina usa como base o Mkdocs , que cria sites est\u00e1ticos com base em arquivos Markdown (README.md lembra?). Escolhi o tema Material por ser o tema usado por padr\u00e3o pelo Backstage , que \u00e9 um projeto que acompanho.","title":"Home"},{"location":"#sejam-bem-vindos","text":"","title":"Sejam bem-vindos"},{"location":"#introducao","text":"Manterei nesse reposit\u00f3rio uma s\u00e9rie de documenta\u00e7\u00f5es e dicas sobre sistemas ou projetos que estudo e/ou pesquiso. Com isto, tenho os seguintes objetivos em mente: Manter documentado o que fiz, fa\u00e7o e farei para facilitar minha vida; Aprender a usar melhor o Mkdocs; Ajudar outras pessoas que estejam pesquisando coisas parecidas. \u00c9 bom notar que muitas das coisas documentadas aqui podem n\u00e3o estar otimizadas ou mesmo terem sido feitas da maneira correta, pois em sua maioria s\u00e3o meus testes e projetos pessoais. Usem por sua conta e risco!","title":"Introdu\u00e7\u00e3o"},{"location":"#como-fiz-esta-pagina","text":"Esta p\u00e1gina usa como base o Mkdocs , que cria sites est\u00e1ticos com base em arquivos Markdown (README.md lembra?). Escolhi o tema Material por ser o tema usado por padr\u00e3o pelo Backstage , que \u00e9 um projeto que acompanho.","title":"Como fiz esta p\u00e1gina?"},{"location":"dicas/","text":"Sample Code \u00b6 This page provides some sample code which may be used in your example component. This code uses TypeScript, and the Markdown code fence to wrap the code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const serviceEntityPage = ( < EntityLayout > < EntityLayout . Route path = \"/\" title = \"Overview\" > < Grid container spacing = { 3 } alignItems = \"stretch\" > < Grid item md = { 6 } > < EntityAboutCard variant = \"gridItem\" /> < /Grid> < /Grid> < /EntityLayout.Route> < EntityLayout . Route path = \"/docs\" title = \"Docs\" > < EntityTechdocsContent /> < /EntityLayout.Route> < /EntityLayout> ); Here is an example of Python code: 1 2 3 4 def getUsersInGroup ( targetGroup , secure = False ): if __debug__ : print ( 'targetGroup=[' + targetGroup + ']' )","title":"Sample Code"},{"location":"dicas/#sample-code","text":"This page provides some sample code which may be used in your example component. This code uses TypeScript, and the Markdown code fence to wrap the code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const serviceEntityPage = ( < EntityLayout > < EntityLayout . Route path = \"/\" title = \"Overview\" > < Grid container spacing = { 3 } alignItems = \"stretch\" > < Grid item md = { 6 } > < EntityAboutCard variant = \"gridItem\" /> < /Grid> < /Grid> < /EntityLayout.Route> < EntityLayout . Route path = \"/docs\" title = \"Docs\" > < EntityTechdocsContent /> < /EntityLayout.Route> < /EntityLayout> ); Here is an example of Python code: 1 2 3 4 def getUsersInGroup ( targetGroup , secure = False ): if __debug__ : print ( 'targetGroup=[' + targetGroup + ']' )","title":"Sample Code"},{"location":"gluu/","text":"Gluu \u00b6 https://github.com/Jarzamendia/gluu Subindo vers\u00e3o b\u00e1sica com Docker-Compose \u00b6","title":"Gluu"},{"location":"gluu/#gluu","text":"https://github.com/Jarzamendia/gluu","title":"Gluu"},{"location":"gluu/#subindo-versao-basica-com-docker-compose","text":"","title":"Subindo vers\u00e3o b\u00e1sica com Docker-Compose"},{"location":"jitsi/","text":"Jitsi Meet \u00b6 Githubs \u00b6 https://github.com/jitsi/jitsi-meet https://github.com/jitsi/docker-jitsi-meet Como iniciar? \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 # Clonar o ambiente, nesse caso usaremos o oficial. git clone https://github.com/jitsi/docker-jitsi-meet.git cd docker-jitsi-meet # Criaremos o arquivo de variaveis de ambiente. mv env.example .env chmod +x gen-passwords.sh # Gerar as variaveis de seguran\u00e7a. ./gen-passwords.sh Ap\u00f3s isto, edite as variaveis necessarias no arquivo .env. As mais importantes s\u00e3o: 1 2 3 4 5 6 7 8 9 10 11 12 # Local onde os arquivos de configura\u00e7\u00e3o ser\u00e3o salvos (incluindo certificados) CONFIG=./jitsi-meet-cfg # Portas do frontend HTTP_PORT=80 HTTPS_PORT=8443 # URL que ser\u00e1 usada para acessar o Meet, \u00e9 obrigat\u00f3ria! PUBLIC_URL=http://jitsi.localhost # IP do host Docker DOCKER_HOST_ADDRESS=10.0.0.1 \u00c9 importante notar que os endere\u00e7os marcados como .meet.jitsi s\u00e3o de uso interno e podem/devem ser mantidos como est\u00e3o. Para iniciar usando Docker-compose: 1 docker-compose up -d Etherpad \u00b6 O Etherpad \u00e9 um gestor de arquivos compartilhados para uso em grupo que pode ser utilizado dentro de uma reuni\u00e3o do meet. Para utiliz\u00e1 lo, adicione o seguinte servi\u00e7o no docker-compose.yml: 1 2 3 4 5 6 7 8 9 10 11 12 13 etherpad: image: etherpad/etherpad:1.8.6 restart: ${RESTART_POLICY} environment: - TITLE=${ETHERPAD_TITLE} - DEFAULT_PAD_TEXT=${ETHERPAD_DEFAULT_PAD_TEXT} - SKIN_NAME=${ETHERPAD_SKIN_NAME} - SKIN_VARIANTS=${ETHERPAD_SKIN_VARIANTS} - SUPPRESS_ERRORS_IN_PAD_TEXT networks: meet.jitsi: aliases: - etherpad.meet.jitsi E adicione as seguintes vari\u00e1veis de ambiente no arquivo .env. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # # Etherpad integration (for document sharing) # # Set etherpad-lite URL in docker local network (uncomment to enable) ETHERPAD_URL_BASE=http://etherpad.meet.jitsi:9001 # Set etherpad-lite public URL (uncomment to enable) ETHERPAD_PUBLIC_URL=http://jitsi.localhost/etherpad/p/ # Name your etherpad instance! ETHERPAD_TITLE=Video Chat # The default text of a pad ETHERPAD_DEFAULT_PAD_TEXT=Welcome to Web Chat!\\n\\n # Name of the skin for etherpad ETHERPAD_SKIN_NAME=colibris # Skin variants for etherpad ETHERPAD_SKIN_VARIANTS=super-light-toolbar super-light-editor light-background full-width-editor # To remove a warning in pad texts SUPPRESS_ERRORS_IN_PAD_TEXT=true \u00c9 importante notar que o ETHERPAD_URL_BASE refere-se ao endere\u00e7o interno do Etherpad, o Nginx do frontend criar\u00e1 uma rota apontando o endere\u00e7o de /etherpad para a URL interna. Da mesma forma \u00e9 importante manter a ETHERPAD_PUBLIC_URL com o mesmo host do seu ambiente, para evitar erros de CORS. Autentica\u00e7\u00e3o \u00b6 \u00c9 poss\u00edvel usar o meet com autentica\u00e7\u00e3o, incluindo em modo h\u00edbrido com usu\u00e1rios autenticados e n\u00e3o autenticados, segue algumas coisas interessantes: Quando definimos a autentica\u00e7\u00e3o, apenas usu\u00e1rios logados podem criar salas. Caso definamos ENABLE_GUESTS como true, usu\u00e1rios deslogados poder\u00e3o entrar em salas j\u00e1 criadas. Usu\u00e1rios deslogados t\u00eam o terr\u00edvel h\u00e1bito de n\u00e3o colocarem um nome no seu perfil. As op\u00e7\u00f5es ENABLE_WELCOME_PAGE, ENABLE_PREJOIN_PAGE, ENABLE_CLOSE_PAGE e ENABLE_REQUIRE_DISPLAY_NAME cuidam muito bem disso. LDAP \u00b6 Est\u00e1 \u00e9 uma configura\u00e7\u00e3o padr\u00e3o de autentica\u00e7\u00e3o por LDAP para um servidor de Active Directory com Windows. 1 2 3 4 5 6 7 8 9 10 ENABLE_AUTH=1 ENABLE_GUESTS=1 AUTH_TYPE=ldap LDAP_URL=ldap://adserver:389 LDAP_BASE=OU=users,DC=contoso,DC=com LDAP_BINDDN=CN=user,OU=users,DC=contoso,DC=com LDAP_BINDPW=password LDAP_FILTER=(samaccountname=%u) LDAP_AUTH_METHOD=bind LDAP_USE_TLS=0 Keycloak \u00b6 Vamos tentar usar o Keycloak como metodo de autentica\u00e7\u00e3o. M\u00e9tricas \u00b6 Podemos verificar as metricas de uso do JVB adicionando os seguintes endpoints na variavel JVB_ENABLE_APIS: 1 JVB_ENABLE_APIS=rest,colibri,stats Ap\u00f3s isto, podemos acessar o container do JVB na porta 8080 ( http://jvb:8080/colibri/stats ); \u00e9 importante notar que ele gera as metricas em formato Json, isso pode ser util em alguns casos, por\u00e9m em geral gostariamos que ele nos entregasse algo no formato do Prometheus. Para isso podemos usar um workaround interessante: Prometheus \u00b6 Podemos usar um container utilitario para traduzir as metricas: 1 2 3 4 5 6 7 8 exporter: image: systemli/prometheus-jitsi-meet-exporter:latest restart: ${RESTART_POLICY} command: -videobridge-url http://jvb:8080/colibri/stats ports: - 9888:9888 networks: meet.jitsi:","title":"Jitsi"},{"location":"jitsi/#jitsi-meet","text":"","title":"Jitsi Meet"},{"location":"jitsi/#githubs","text":"https://github.com/jitsi/jitsi-meet https://github.com/jitsi/docker-jitsi-meet","title":"Githubs"},{"location":"jitsi/#como-iniciar","text":"1 2 3 4 5 6 7 8 9 10 11 12 # Clonar o ambiente, nesse caso usaremos o oficial. git clone https://github.com/jitsi/docker-jitsi-meet.git cd docker-jitsi-meet # Criaremos o arquivo de variaveis de ambiente. mv env.example .env chmod +x gen-passwords.sh # Gerar as variaveis de seguran\u00e7a. ./gen-passwords.sh Ap\u00f3s isto, edite as variaveis necessarias no arquivo .env. As mais importantes s\u00e3o: 1 2 3 4 5 6 7 8 9 10 11 12 # Local onde os arquivos de configura\u00e7\u00e3o ser\u00e3o salvos (incluindo certificados) CONFIG=./jitsi-meet-cfg # Portas do frontend HTTP_PORT=80 HTTPS_PORT=8443 # URL que ser\u00e1 usada para acessar o Meet, \u00e9 obrigat\u00f3ria! PUBLIC_URL=http://jitsi.localhost # IP do host Docker DOCKER_HOST_ADDRESS=10.0.0.1 \u00c9 importante notar que os endere\u00e7os marcados como .meet.jitsi s\u00e3o de uso interno e podem/devem ser mantidos como est\u00e3o. Para iniciar usando Docker-compose: 1 docker-compose up -d","title":"Como iniciar?"},{"location":"jitsi/#etherpad","text":"O Etherpad \u00e9 um gestor de arquivos compartilhados para uso em grupo que pode ser utilizado dentro de uma reuni\u00e3o do meet. Para utiliz\u00e1 lo, adicione o seguinte servi\u00e7o no docker-compose.yml: 1 2 3 4 5 6 7 8 9 10 11 12 13 etherpad: image: etherpad/etherpad:1.8.6 restart: ${RESTART_POLICY} environment: - TITLE=${ETHERPAD_TITLE} - DEFAULT_PAD_TEXT=${ETHERPAD_DEFAULT_PAD_TEXT} - SKIN_NAME=${ETHERPAD_SKIN_NAME} - SKIN_VARIANTS=${ETHERPAD_SKIN_VARIANTS} - SUPPRESS_ERRORS_IN_PAD_TEXT networks: meet.jitsi: aliases: - etherpad.meet.jitsi E adicione as seguintes vari\u00e1veis de ambiente no arquivo .env. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # # Etherpad integration (for document sharing) # # Set etherpad-lite URL in docker local network (uncomment to enable) ETHERPAD_URL_BASE=http://etherpad.meet.jitsi:9001 # Set etherpad-lite public URL (uncomment to enable) ETHERPAD_PUBLIC_URL=http://jitsi.localhost/etherpad/p/ # Name your etherpad instance! ETHERPAD_TITLE=Video Chat # The default text of a pad ETHERPAD_DEFAULT_PAD_TEXT=Welcome to Web Chat!\\n\\n # Name of the skin for etherpad ETHERPAD_SKIN_NAME=colibris # Skin variants for etherpad ETHERPAD_SKIN_VARIANTS=super-light-toolbar super-light-editor light-background full-width-editor # To remove a warning in pad texts SUPPRESS_ERRORS_IN_PAD_TEXT=true \u00c9 importante notar que o ETHERPAD_URL_BASE refere-se ao endere\u00e7o interno do Etherpad, o Nginx do frontend criar\u00e1 uma rota apontando o endere\u00e7o de /etherpad para a URL interna. Da mesma forma \u00e9 importante manter a ETHERPAD_PUBLIC_URL com o mesmo host do seu ambiente, para evitar erros de CORS.","title":"Etherpad"},{"location":"jitsi/#autenticacao","text":"\u00c9 poss\u00edvel usar o meet com autentica\u00e7\u00e3o, incluindo em modo h\u00edbrido com usu\u00e1rios autenticados e n\u00e3o autenticados, segue algumas coisas interessantes: Quando definimos a autentica\u00e7\u00e3o, apenas usu\u00e1rios logados podem criar salas. Caso definamos ENABLE_GUESTS como true, usu\u00e1rios deslogados poder\u00e3o entrar em salas j\u00e1 criadas. Usu\u00e1rios deslogados t\u00eam o terr\u00edvel h\u00e1bito de n\u00e3o colocarem um nome no seu perfil. As op\u00e7\u00f5es ENABLE_WELCOME_PAGE, ENABLE_PREJOIN_PAGE, ENABLE_CLOSE_PAGE e ENABLE_REQUIRE_DISPLAY_NAME cuidam muito bem disso.","title":"Autentica\u00e7\u00e3o"},{"location":"jitsi/#ldap","text":"Est\u00e1 \u00e9 uma configura\u00e7\u00e3o padr\u00e3o de autentica\u00e7\u00e3o por LDAP para um servidor de Active Directory com Windows. 1 2 3 4 5 6 7 8 9 10 ENABLE_AUTH=1 ENABLE_GUESTS=1 AUTH_TYPE=ldap LDAP_URL=ldap://adserver:389 LDAP_BASE=OU=users,DC=contoso,DC=com LDAP_BINDDN=CN=user,OU=users,DC=contoso,DC=com LDAP_BINDPW=password LDAP_FILTER=(samaccountname=%u) LDAP_AUTH_METHOD=bind LDAP_USE_TLS=0","title":"LDAP"},{"location":"jitsi/#keycloak","text":"Vamos tentar usar o Keycloak como metodo de autentica\u00e7\u00e3o.","title":"Keycloak"},{"location":"jitsi/#metricas","text":"Podemos verificar as metricas de uso do JVB adicionando os seguintes endpoints na variavel JVB_ENABLE_APIS: 1 JVB_ENABLE_APIS=rest,colibri,stats Ap\u00f3s isto, podemos acessar o container do JVB na porta 8080 ( http://jvb:8080/colibri/stats ); \u00e9 importante notar que ele gera as metricas em formato Json, isso pode ser util em alguns casos, por\u00e9m em geral gostariamos que ele nos entregasse algo no formato do Prometheus. Para isso podemos usar um workaround interessante:","title":"M\u00e9tricas"},{"location":"jitsi/#prometheus","text":"Podemos usar um container utilitario para traduzir as metricas: 1 2 3 4 5 6 7 8 exporter: image: systemli/prometheus-jitsi-meet-exporter:latest restart: ${RESTART_POLICY} command: -videobridge-url http://jvb:8080/colibri/stats ports: - 9888:9888 networks: meet.jitsi:","title":"Prometheus"},{"location":"keycloak/","text":"Keycloak \u00b6 Githubs \u00b6 https://github.com/Jarzamendia/keycloak.git Docker-compose \u00b6 Exporta\u00e7\u00e3o de realm \u00b6","title":"Keycloak"},{"location":"keycloak/#keycloak","text":"","title":"Keycloak"},{"location":"keycloak/#githubs","text":"https://github.com/Jarzamendia/keycloak.git","title":"Githubs"},{"location":"keycloak/#docker-compose","text":"","title":"Docker-compose"},{"location":"keycloak/#exportacao-de-realm","text":"","title":"Exporta\u00e7\u00e3o de realm"},{"location":"mattermost/","text":"Mattermost \u00b6 Script de limpeza \u00b6 A vers\u00e3o free do mattermost (Team Edition) n\u00e3o d\u00e1 suporte a limpeza automatizada das mensagens\\m\u00eddias. Para resolver isto, o repo https://github.com/aljazceru/mattermost-retention criou um script de limpeza dos anexos e mensagens antigas. Basicamente voc\u00ea configura os dados do banco e a pasta 'data' do MM, tudo anterior ao per\u00edodo de reten\u00e7\u00e3o definido ser\u00e1 apagado. O processo demora um pouco mas resolve bem o problema de ac\u00famulo de mensagens e anexos. Recentemente eu fiz uma PR adicionando suporte ao Mysql, pois a vers\u00e3o da epoca s\u00f3 aceitava Postgres.","title":"Mattermost"},{"location":"mattermost/#mattermost","text":"","title":"Mattermost"},{"location":"mattermost/#script-de-limpeza","text":"A vers\u00e3o free do mattermost (Team Edition) n\u00e3o d\u00e1 suporte a limpeza automatizada das mensagens\\m\u00eddias. Para resolver isto, o repo https://github.com/aljazceru/mattermost-retention criou um script de limpeza dos anexos e mensagens antigas. Basicamente voc\u00ea configura os dados do banco e a pasta 'data' do MM, tudo anterior ao per\u00edodo de reten\u00e7\u00e3o definido ser\u00e1 apagado. O processo demora um pouco mas resolve bem o problema de ac\u00famulo de mensagens e anexos. Recentemente eu fiz uma PR adicionando suporte ao Mysql, pois a vers\u00e3o da epoca s\u00f3 aceitava Postgres.","title":"Script de limpeza"},{"location":"monitoramento/","text":"Monitoramento \u00b6 Prometheus no Minikube \u00b6 Iniciando o Minikube para testes 1 $ minikube start Criando o namespace para o Prometheus 1 $ kubectl create namespace prometheus Adicionando o Prometheus Operator 1 $ helm install prometheus stable/prometheus-operator --namespace prometheus Verificando a instala\u00e7\u00e3o... 1 $ kubectl get pods -n prometheus Acessando o Grafana 1 2 3 $ kubectl port-forward -n prometheus prometheus-prometheus-prometheus-oper-prometheus-0 9090 $ kubectl port-forward -n prometheus prometheus-grafana-6cffc5cff4-v2j2v 3000 admin:prom-operator","title":"Monitoramento"},{"location":"monitoramento/#monitoramento","text":"","title":"Monitoramento"},{"location":"monitoramento/#prometheus-no-minikube","text":"Iniciando o Minikube para testes 1 $ minikube start Criando o namespace para o Prometheus 1 $ kubectl create namespace prometheus Adicionando o Prometheus Operator 1 $ helm install prometheus stable/prometheus-operator --namespace prometheus Verificando a instala\u00e7\u00e3o... 1 $ kubectl get pods -n prometheus Acessando o Grafana 1 2 3 $ kubectl port-forward -n prometheus prometheus-prometheus-prometheus-oper-prometheus-0 9090 $ kubectl port-forward -n prometheus prometheus-grafana-6cffc5cff4-v2j2v 3000 admin:prom-operator","title":"Prometheus no Minikube"}]}